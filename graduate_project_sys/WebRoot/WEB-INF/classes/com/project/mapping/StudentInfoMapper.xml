<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.dao.StudentInfoMapper">
  <resultMap id="BaseResultMap" type="com.project.model.StudentInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
        <result column="stu_no" property="stuNo" jdbcType="VARCHAR" />
  <result column="password" property="password" jdbcType="VARCHAR" />
  <result column="real_name" property="realName" jdbcType="VARCHAR" />
  <result column="cel_phone" property="celPhone" jdbcType="VARCHAR" />
  <result column="email" property="email" jdbcType="VARCHAR" />
  <result column="head_img" property="headImg" jdbcType="VARCHAR" />
  <result column="sex" property="sex" jdbcType="INTEGER" />
  <result column="have_turtor" property="haveTurtor" jdbcType="INTEGER" />
  <result column="college_id" property="collegeId" jdbcType="INTEGER" />
  <result column="class_id" property="classId" jdbcType="INTEGER" />
  <result column="research_id" property="researchId" jdbcType="INTEGER" />
  <result column="grade_id" property="gradeId" jdbcType="INTEGER" />
  <result column="term_id" property="termId" jdbcType="INTEGER" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
     id,stu_no,password,real_name,cel_phone,email,head_img,sex,have_turtor,college_id,class_id,research_id,grade_id,term_id
  </sql>
  <select id="selectByExample" parameterType="com.project.model.StudentInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
     <if test="startRow >= 0 and pageRows > 0">
  limit ${startRow},${pageRows}
  </if>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from student_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
   delete from student_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.project.model.StudentInfoExample">
    delete from student_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.project.model.StudentInfo">
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

      insert into student_info (stu_no,password,real_name,cel_phone,email,head_img,sex,have_turtor,college_id,class_id,research_id,grade_id,term_id)
      values (	#{id,jdbcType=INTEGER},	#{stuNo,jdbcType=VARCHAR},	#{password,jdbcType=VARCHAR},	#{realName,jdbcType=VARCHAR},	#{celPhone,jdbcType=VARCHAR},	#{email,jdbcType=VARCHAR},	#{headImg,jdbcType=VARCHAR},	#{sex,jdbcType=INTEGER},	#{haveTurtor,jdbcType=INTEGER},	#{collegeId,jdbcType=INTEGER},	#{classId,jdbcType=INTEGER},	#{researchId,jdbcType=INTEGER},	#{gradeId,jdbcType=INTEGER},	#{termId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.project.model.StudentInfo">
   <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

    insert into student_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null" >
	  id,
 </if>
<if test="stuNo != null" >
	  stu_no,
 </if>
<if test="password != null" >
	  password,
 </if>
<if test="realName != null" >
	  real_name,
 </if>
<if test="celPhone != null" >
	  cel_phone,
 </if>
<if test="email != null" >
	  email,
 </if>
<if test="headImg != null" >
	  head_img,
 </if>
<if test="sex != null" >
	  sex,
 </if>
<if test="haveTurtor != null" >
	  have_turtor,
 </if>
<if test="collegeId != null" >
	  college_id,
 </if>
<if test="classId != null" >
	  class_id,
 </if>
<if test="researchId != null" >
	  research_id,
 </if>
<if test="gradeId != null" >
	  grade_id,
 </if>
<if test="termId != null" >
	  term_id
 </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
         <if test="id != null" >
	 #{id,jdbcType=INTEGER},
	 </if>
  <if test="stuNo != null" >
	 #{stuNo,jdbcType=VARCHAR},
	 </if>
  <if test="password != null" >
	 #{password,jdbcType=VARCHAR},
	 </if>
  <if test="realName != null" >
	 #{realName,jdbcType=VARCHAR},
	 </if>
  <if test="celPhone != null" >
	 #{celPhone,jdbcType=VARCHAR},
	 </if>
  <if test="email != null" >
	 #{email,jdbcType=VARCHAR},
	 </if>
  <if test="headImg != null" >
	 #{headImg,jdbcType=VARCHAR},
	 </if>
  <if test="sex != null" >
	 #{sex,jdbcType=INTEGER},
	 </if>
  <if test="haveTurtor != null" >
	 #{haveTurtor,jdbcType=INTEGER},
	 </if>
  <if test="collegeId != null" >
	 #{collegeId,jdbcType=INTEGER},
	 </if>
  <if test="classId != null" >
	 #{classId,jdbcType=INTEGER},
	 </if>
  <if test="researchId != null" >
	 #{researchId,jdbcType=INTEGER},
	 </if>
  <if test="gradeId != null" >
	 #{gradeId,jdbcType=INTEGER},
	 </if>
  <if test="termId != null" >
	 #{termId,jdbcType=INTEGER},
	 </if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="com.project.model.StudentInfoExample" resultType="java.lang.Long">
    select count(*) from student_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student_info
    <set>
       <if test="record.stuNo != null" >
	 stu_no = #{record.stuNo,jdbcType=VARCHAR},
</if>
 <if test="record.password != null" >
	 password = #{record.password,jdbcType=VARCHAR},
</if>
 <if test="record.realName != null" >
	 real_name = #{record.realName,jdbcType=VARCHAR},
</if>
 <if test="record.celPhone != null" >
	 cel_phone = #{record.celPhone,jdbcType=VARCHAR},
</if>
 <if test="record.email != null" >
	 email = #{record.email,jdbcType=VARCHAR},
</if>
 <if test="record.headImg != null" >
	 head_img = #{record.headImg,jdbcType=VARCHAR},
</if>
 <if test="record.sex != null" >
	 sex = #{record.sex,jdbcType=INTEGER},
</if>
 <if test="record.haveTurtor != null" >
	 have_turtor = #{record.haveTurtor,jdbcType=INTEGER},
</if>
 <if test="record.collegeId != null" >
	 college_id = #{record.collegeId,jdbcType=INTEGER},
</if>
 <if test="record.classId != null" >
	 class_id = #{record.classId,jdbcType=INTEGER},
</if>
 <if test="record.researchId != null" >
	 research_id = #{record.researchId,jdbcType=INTEGER},
</if>
 <if test="record.gradeId != null" >
	 grade_id = #{record.gradeId,jdbcType=INTEGER},
</if>
 <if test="record.termId != null" >
	 term_id = #{record.termId,jdbcType=INTEGER}
</if>

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student_info
    set 
    				stu_no = #{record.stuNo,jdbcType=VARCHAR},	password = #{record.password,jdbcType=VARCHAR},	real_name = #{record.realName,jdbcType=VARCHAR},	cel_phone = #{record.celPhone,jdbcType=VARCHAR},	email = #{record.email,jdbcType=VARCHAR},	head_img = #{record.headImg,jdbcType=VARCHAR},	sex = #{record.sex,jdbcType=INTEGER},	have_turtor = #{record.haveTurtor,jdbcType=INTEGER},	college_id = #{record.collegeId,jdbcType=INTEGER},	class_id = #{record.classId,jdbcType=INTEGER},	research_id = #{record.researchId,jdbcType=INTEGER},	grade_id = #{record.gradeId,jdbcType=INTEGER},	term_id = #{record.termId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.model.StudentInfo">
    update student_info
    <set>
       <if test="stuNo != null" >
	 stu_no = #{stuNo,jdbcType=VARCHAR},
</if>
 <if test="password != null" >
	 password = #{password,jdbcType=VARCHAR},
</if>
 <if test="realName != null" >
	 real_name = #{realName,jdbcType=VARCHAR},
</if>
 <if test="celPhone != null" >
	 cel_phone = #{celPhone,jdbcType=VARCHAR},
</if>
 <if test="email != null" >
	 email = #{email,jdbcType=VARCHAR},
</if>
 <if test="headImg != null" >
	 head_img = #{headImg,jdbcType=VARCHAR},
</if>
 <if test="sex != null" >
	 sex = #{sex,jdbcType=INTEGER},
</if>
 <if test="haveTurtor != null" >
	 have_turtor = #{haveTurtor,jdbcType=INTEGER},
</if>
 <if test="collegeId != null" >
	 college_id = #{collegeId,jdbcType=INTEGER},
</if>
 <if test="classId != null" >
	 class_id = #{classId,jdbcType=INTEGER},
</if>
 <if test="researchId != null" >
	 research_id = #{researchId,jdbcType=INTEGER},
</if>
 <if test="gradeId != null" >
	 grade_id = #{gradeId,jdbcType=INTEGER},
</if>
 <if test="termId != null" >
	 term_id = #{termId,jdbcType=INTEGER}
</if>

    </set>
     where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.model.StudentInfo">
    update student_info
    set 
     			stu_no = #{stuNo,jdbcType=VARCHAR},	password = #{password,jdbcType=VARCHAR},	real_name = #{realName,jdbcType=VARCHAR},	cel_phone = #{celPhone,jdbcType=VARCHAR},	email = #{email,jdbcType=VARCHAR},	head_img = #{headImg,jdbcType=VARCHAR},	sex = #{sex,jdbcType=INTEGER},	have_turtor = #{haveTurtor,jdbcType=INTEGER},	college_id = #{collegeId,jdbcType=INTEGER},	class_id = #{classId,jdbcType=INTEGER},	research_id = #{researchId,jdbcType=INTEGER},	grade_id = #{gradeId,jdbcType=INTEGER},	term_id = #{termId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>
