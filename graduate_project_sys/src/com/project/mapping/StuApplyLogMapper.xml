<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.dao.StuApplyLogMapper">
  <resultMap id="BaseResultMap" type="com.project.model.StuApplyLog">
    <id column="id" jdbcType="INTEGER" property="id" />
        <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
  <result column="project_title" property="projectTitle" jdbcType="VARCHAR" />
  <result column="project_intro" property="projectIntro" jdbcType="VARCHAR" />
  <result column="profile" property="profile" jdbcType="VARCHAR" />
  <result column="stu_remark" property="stuRemark" jdbcType="VARCHAR" />
  <result column="stu_id" property="stuId" jdbcType="INTEGER" />
  <result column="select_status" property="selectStatus" jdbcType="INTEGER" />
  <result column="teacher_remark" property="teacherRemark" jdbcType="VARCHAR" />
  <result column="create_time" property="createTime" jdbcType="VARCHAR" />

  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
     id,teacher_id,project_title,project_intro,profile,stu_remark,stu_id,select_status,teacher_remark,create_time
  </sql>
  <select id="selectByExample" parameterType="com.project.model.StuApplyLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stu_apply_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
     <if test="startRow >= 0 and pageRows > 0">
  limit ${startRow},${pageRows}
  </if>

  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
     from stu_apply_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
   delete from stu_apply_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.project.model.StuApplyLogExample">
    delete from stu_apply_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.project.model.StuApplyLog">
      <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

      insert into stu_apply_log (teacher_id,project_title,project_intro,profile,stu_remark,stu_id,select_status,teacher_remark,create_time)
      values (	#{id,jdbcType=INTEGER},	#{teacherId,jdbcType=INTEGER},	#{projectTitle,jdbcType=VARCHAR},	#{projectIntro,jdbcType=VARCHAR},	#{profile,jdbcType=VARCHAR},	#{stuRemark,jdbcType=VARCHAR},	#{stuId,jdbcType=INTEGER},	#{selectStatus,jdbcType=INTEGER},	#{teacherRemark,jdbcType=VARCHAR},	#{createTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.project.model.StuApplyLog">
   <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
  SELECT LAST_INSERT_ID()
</selectKey>

    insert into stu_apply_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null" >
	  id,
 </if>
<if test="teacherId != null" >
	  teacher_id,
 </if>
<if test="projectTitle != null" >
	  project_title,
 </if>
<if test="projectIntro != null" >
	  project_intro,
 </if>
<if test="profile != null" >
	  profile,
 </if>
<if test="stuRemark != null" >
	  stu_remark,
 </if>
<if test="stuId != null" >
	  stu_id,
 </if>
<if test="selectStatus != null" >
	  select_status,
 </if>
<if test="teacherRemark != null" >
	  teacher_remark,
 </if>
<if test="createTime != null" >
	  create_time
 </if>

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
         <if test="id != null" >
	 #{id,jdbcType=INTEGER},
	 </if>
  <if test="teacherId != null" >
	 #{teacherId,jdbcType=INTEGER},
	 </if>
  <if test="projectTitle != null" >
	 #{projectTitle,jdbcType=VARCHAR},
	 </if>
  <if test="projectIntro != null" >
	 #{projectIntro,jdbcType=VARCHAR},
	 </if>
  <if test="profile != null" >
	 #{profile,jdbcType=VARCHAR},
	 </if>
  <if test="stuRemark != null" >
	 #{stuRemark,jdbcType=VARCHAR},
	 </if>
  <if test="stuId != null" >
	 #{stuId,jdbcType=INTEGER},
	 </if>
  <if test="selectStatus != null" >
	 #{selectStatus,jdbcType=INTEGER},
	 </if>
  <if test="teacherRemark != null" >
	 #{teacherRemark,jdbcType=VARCHAR},
	 </if>
  <if test="createTime != null" >
	 #{createTime,jdbcType=VARCHAR},
	 </if>

    </trim>
  </insert>
  <select id="countByExample" parameterType="com.project.model.StuApplyLogExample" resultType="java.lang.Long">
    select count(*) from stu_apply_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update stu_apply_log
    <set>
       <if test="record.teacherId != null" >
	 teacher_id = #{record.teacherId,jdbcType=INTEGER},
</if>
 <if test="record.projectTitle != null" >
	 project_title = #{record.projectTitle,jdbcType=VARCHAR},
</if>
 <if test="record.projectIntro != null" >
	 project_intro = #{record.projectIntro,jdbcType=VARCHAR},
</if>
 <if test="record.profile != null" >
	 profile = #{record.profile,jdbcType=VARCHAR},
</if>
 <if test="record.stuRemark != null" >
	 stu_remark = #{record.stuRemark,jdbcType=VARCHAR},
</if>
 <if test="record.stuId != null" >
	 stu_id = #{record.stuId,jdbcType=INTEGER},
</if>
 <if test="record.selectStatus != null" >
	 select_status = #{record.selectStatus,jdbcType=INTEGER},
</if>
 <if test="record.teacherRemark != null" >
	 teacher_remark = #{record.teacherRemark,jdbcType=VARCHAR},
</if>
 <if test="record.createTime != null" >
	 create_time = #{record.createTime,jdbcType=VARCHAR}
</if>

    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update stu_apply_log
    set 
    				teacher_id = #{record.teacherId,jdbcType=INTEGER},	project_title = #{record.projectTitle,jdbcType=VARCHAR},	project_intro = #{record.projectIntro,jdbcType=VARCHAR},	profile = #{record.profile,jdbcType=VARCHAR},	stu_remark = #{record.stuRemark,jdbcType=VARCHAR},	stu_id = #{record.stuId,jdbcType=INTEGER},	select_status = #{record.selectStatus,jdbcType=INTEGER},	teacher_remark = #{record.teacherRemark,jdbcType=VARCHAR},	create_time = #{record.createTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.model.StuApplyLog">
    update stu_apply_log
    <set>
       <if test="teacherId != null" >
	 teacher_id = #{teacherId,jdbcType=INTEGER},
</if>
 <if test="projectTitle != null" >
	 project_title = #{projectTitle,jdbcType=VARCHAR},
</if>
 <if test="projectIntro != null" >
	 project_intro = #{projectIntro,jdbcType=VARCHAR},
</if>
 <if test="profile != null" >
	 profile = #{profile,jdbcType=VARCHAR},
</if>
 <if test="stuRemark != null" >
	 stu_remark = #{stuRemark,jdbcType=VARCHAR},
</if>
 <if test="stuId != null" >
	 stu_id = #{stuId,jdbcType=INTEGER},
</if>
 <if test="selectStatus != null" >
	 select_status = #{selectStatus,jdbcType=INTEGER},
</if>
 <if test="teacherRemark != null" >
	 teacher_remark = #{teacherRemark,jdbcType=VARCHAR},
</if>
 <if test="createTime != null" >
	 create_time = #{createTime,jdbcType=VARCHAR}
</if>

    </set>
     where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.model.StuApplyLog">
    update stu_apply_log
    set 
     			teacher_id = #{teacherId,jdbcType=INTEGER},	project_title = #{projectTitle,jdbcType=VARCHAR},	project_intro = #{projectIntro,jdbcType=VARCHAR},	profile = #{profile,jdbcType=VARCHAR},	stu_remark = #{stuRemark,jdbcType=VARCHAR},	stu_id = #{stuId,jdbcType=INTEGER},	select_status = #{selectStatus,jdbcType=INTEGER},	teacher_remark = #{teacherRemark,jdbcType=VARCHAR},	create_time = #{createTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>
